@startuml
autonumber
'hide footbox
actor "SalesClerk" as SC

participant ":SpecifyProductUI" as UI
participant ":SpecifyProductController" as CTRL
participant ":ListCategoryService" as CS
participant ":ProductionProductService" as PS
participant ":ListLocationFromWarehouseService" as LS
participant ":PersistenceContext" as PC
participant ":RepositoryFactory" as RF
participant ":ProductRepository" as PR
participant ":RowRepository" as RR
participant ":RowMapper" as RM
participant ":CategoryMapper" as M
participant ":CategoryRepository" as CAR
participant ":ProductFactory" as PF
participant ":Product" as P



activate SC
SC -> UI : asks to specify new Product
activate UI

UI -> CTRL : getProductCategory()
activate CTRL
CTRL -> CS : create()
activate CS
CS -> PC : repositories()
activate PC

PC -> RF : create()
activate RF

deactivate PC

RF -> CAR : create()
deactivate RF

deactivate CS
CTRL -> CS : productCategories()
deactivate CAR
activate CS

CS -> CAR : getAllCategories()
activate CAR

deactivate PR
CAR --> CS : categoryList

deactivate CAR
CS -> M : toDTO(categoryList)
activate M
ref over M : :SD_CategoryMapper_toDTO_list


M --> CS : dtoCategoryList
deactivate M

CS --> CTRL : dtoCategoryList
deactivate CS


CTRL --> UI : dtoCategoryList
deactivate CTRL

UI --> SC : shows the Category List and asks to select one category 
deactivate UI

SC -> UI : selects one category
activate UI

UI -> CTRL : getCategoryByDTO(categoryDto)
activate CTRL

CTRL -> CS : getRealCategory(categoryDto)
activate CS

CS --> CTRL : category

deactivate CS


CTRL --> UI : category

deactivate CTRL



UI --> SC : shows category

UI --> CTRL : showLocation()
activate CTRL
CTRL -> LS : create()
activate LS

LS -> PC : repositories()
activate PC

PC -> RF : create()
deactivate PC
activate RF

RF -> RR : create()
deactivate RF

 
deactivate LS

CTRL -> LS : listRow()
activate LS
LS -> RR : getAllRow()

activate RR

RR --> LS : rowList
deactivate RR
LS -> RM : toDTO(rowlist)


activate RM
ref over RM : :SD_RowMapper_toDTO_list


RM --> LS : dtoRowList
deactivate RM


LS --> CTRL : dtoRowList
deactivate LS


CTRL --> UI : dtoRowList
deactivate CTRL


UI --> SC :  List of available positions and asks to choose one
deactivate UI



SC -> UI : choose one available location 
activate UI 

UI -> CTRL : getLocation(rowDto)
activate CTRL 

CTRL ->  LS : getRealRow(rowDto)
activate LS

LS --> CTRL : row
deactivate LS

deactivate CTRL


UI --> SC : asks to type the rest of data(photo, internalCode,shortDescription,extendedDescription,brand,reference,productionCode,technicalDescription,name,price)

deactivate UI


SC -> UI : types the requested data
activate UI
UI -> CTRL : specifyProduct(photo, internalCode,shortDescription,extendedDescription,brand,reference,productionCode,technicalDescription,category,name,price,location(row))
activate CTRL 

CTRL -> PS : create()

CTRL -> PS : buildProduct(photo, internalCode,shortDescription,extendedDescription,brand,reference,productionCode,technicalDescription,category,name,price,location(row))
activate PS

PS -> PF : create()

PS -> PF : setPhoto(photo)

note right

all sets

end note

PS -> PF : build()
activate PF
PF -> P : create(photo, internalCode,shortDescription,extendedDescription,brand,reference,productionCode,technicalDescription,category,name,price,location(row))
activate P


P --> PF : product
deactivate P

PF --> PS : product
deactivate PF


PS -> PC : repositories()
activate PC


PC -> RF : create()
activate RF


RF -> PR : create()
activate PR

PR -> PR : save(product) 
deactivate RF


deactivate PR

deactivate PC
deactivate PS



UI--> SC: inform operation success
deactivate UI
deactivate SC
@enduml